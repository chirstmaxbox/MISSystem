#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessagerDomain
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sqllhdb")]
	public partial class MessagerDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInterActionMessageType(InterActionMessageType instance);
    partial void UpdateInterActionMessageType(InterActionMessageType instance);
    partial void DeleteInterActionMessageType(InterActionMessageType instance);
    partial void InsertInterActionMessageCategory(InterActionMessageCategory instance);
    partial void UpdateInterActionMessageCategory(InterActionMessageCategory instance);
    partial void DeleteInterActionMessageCategory(InterActionMessageCategory instance);
    partial void InsertInterActionMessageEmployeeStatus(InterActionMessageEmployeeStatus instance);
    partial void UpdateInterActionMessageEmployeeStatus(InterActionMessageEmployeeStatus instance);
    partial void DeleteInterActionMessageEmployeeStatus(InterActionMessageEmployeeStatus instance);
    partial void InsertInterActionMessage(InterActionMessage instance);
    partial void UpdateInterActionMessage(InterActionMessage instance);
    partial void DeleteInterActionMessage(InterActionMessage instance);
    partial void InsertFW_Employee(FW_Employee instance);
    partial void UpdateFW_Employee(FW_Employee instance);
    partial void DeleteFW_Employee(FW_Employee instance);
    #endregion
		
		public MessagerDbDataContext() : 
				base(global::MessagerDomain.Properties.Settings.Default.SqllhdbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MessagerDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MessagerDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MessagerDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MessagerDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InterActionMessageType> InterActionMessageTypes
		{
			get
			{
				return this.GetTable<InterActionMessageType>();
			}
		}
		
		public System.Data.Linq.Table<InterActionMessageCategory> InterActionMessageCategories
		{
			get
			{
				return this.GetTable<InterActionMessageCategory>();
			}
		}
		
		public System.Data.Linq.Table<InterActionMessageEmployeeStatus> InterActionMessageEmployeeStatus
		{
			get
			{
				return this.GetTable<InterActionMessageEmployeeStatus>();
			}
		}
		
		public System.Data.Linq.Table<InterActionMessage> InterActionMessages
		{
			get
			{
				return this.GetTable<InterActionMessage>();
			}
		}
		
		public System.Data.Linq.Table<FW_Employee> FW_Employees
		{
			get
			{
				return this.GetTable<FW_Employee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InterActionMessageType")]
	public partial class InterActionMessageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageTypeID;
		
		private int _MessageCategoryID;
		
		private string _MessageName;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<InterActionMessage> _InterActionMessages;
		
		private EntityRef<InterActionMessageCategory> _InterActionMessageCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageTypeIDChanging(int value);
    partial void OnMessageTypeIDChanged();
    partial void OnMessageCategoryIDChanging(int value);
    partial void OnMessageCategoryIDChanged();
    partial void OnMessageNameChanging(string value);
    partial void OnMessageNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public InterActionMessageType()
		{
			this._InterActionMessages = new EntitySet<InterActionMessage>(new Action<InterActionMessage>(this.attach_InterActionMessages), new Action<InterActionMessage>(this.detach_InterActionMessages));
			this._InterActionMessageCategory = default(EntityRef<InterActionMessageCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MessageTypeID
		{
			get
			{
				return this._MessageTypeID;
			}
			set
			{
				if ((this._MessageTypeID != value))
				{
					this.OnMessageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MessageTypeID = value;
					this.SendPropertyChanged("MessageTypeID");
					this.OnMessageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCategoryID", DbType="Int NOT NULL")]
		public int MessageCategoryID
		{
			get
			{
				return this._MessageCategoryID;
			}
			set
			{
				if ((this._MessageCategoryID != value))
				{
					if (this._InterActionMessageCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._MessageCategoryID = value;
					this.SendPropertyChanged("MessageCategoryID");
					this.OnMessageCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MessageName
		{
			get
			{
				return this._MessageName;
			}
			set
			{
				if ((this._MessageName != value))
				{
					this.OnMessageNameChanging(value);
					this.SendPropertyChanging();
					this._MessageName = value;
					this.SendPropertyChanged("MessageName");
					this.OnMessageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterActionMessageType_InterActionMessage", Storage="_InterActionMessages", ThisKey="MessageTypeID", OtherKey="MessageTypeID")]
		public EntitySet<InterActionMessage> InterActionMessages
		{
			get
			{
				return this._InterActionMessages;
			}
			set
			{
				this._InterActionMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterActionMessageCategory_InterActionMessageType", Storage="_InterActionMessageCategory", ThisKey="MessageCategoryID", OtherKey="MessageCategoryID", IsForeignKey=true)]
		public InterActionMessageCategory InterActionMessageCategory
		{
			get
			{
				return this._InterActionMessageCategory.Entity;
			}
			set
			{
				InterActionMessageCategory previousValue = this._InterActionMessageCategory.Entity;
				if (((previousValue != value) 
							|| (this._InterActionMessageCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InterActionMessageCategory.Entity = null;
						previousValue.InterActionMessageTypes.Remove(this);
					}
					this._InterActionMessageCategory.Entity = value;
					if ((value != null))
					{
						value.InterActionMessageTypes.Add(this);
						this._MessageCategoryID = value.MessageCategoryID;
					}
					else
					{
						this._MessageCategoryID = default(int);
					}
					this.SendPropertyChanged("InterActionMessageCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InterActionMessages(InterActionMessage entity)
		{
			this.SendPropertyChanging();
			entity.InterActionMessageType = this;
		}
		
		private void detach_InterActionMessages(InterActionMessage entity)
		{
			this.SendPropertyChanging();
			entity.InterActionMessageType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InterActionMessageCategory")]
	public partial class InterActionMessageCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageCategoryID;
		
		private string _MessageCategoryName;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<InterActionMessageType> _InterActionMessageTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageCategoryIDChanging(int value);
    partial void OnMessageCategoryIDChanged();
    partial void OnMessageCategoryNameChanging(string value);
    partial void OnMessageCategoryNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public InterActionMessageCategory()
		{
			this._InterActionMessageTypes = new EntitySet<InterActionMessageType>(new Action<InterActionMessageType>(this.attach_InterActionMessageTypes), new Action<InterActionMessageType>(this.detach_InterActionMessageTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MessageCategoryID
		{
			get
			{
				return this._MessageCategoryID;
			}
			set
			{
				if ((this._MessageCategoryID != value))
				{
					this.OnMessageCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._MessageCategoryID = value;
					this.SendPropertyChanged("MessageCategoryID");
					this.OnMessageCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCategoryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MessageCategoryName
		{
			get
			{
				return this._MessageCategoryName;
			}
			set
			{
				if ((this._MessageCategoryName != value))
				{
					this.OnMessageCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._MessageCategoryName = value;
					this.SendPropertyChanged("MessageCategoryName");
					this.OnMessageCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterActionMessageCategory_InterActionMessageType", Storage="_InterActionMessageTypes", ThisKey="MessageCategoryID", OtherKey="MessageCategoryID")]
		public EntitySet<InterActionMessageType> InterActionMessageTypes
		{
			get
			{
				return this._InterActionMessageTypes;
			}
			set
			{
				this._InterActionMessageTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InterActionMessageTypes(InterActionMessageType entity)
		{
			this.SendPropertyChanging();
			entity.InterActionMessageCategory = this;
		}
		
		private void detach_InterActionMessageTypes(InterActionMessageType entity)
		{
			this.SendPropertyChanging();
			entity.InterActionMessageCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InterActionMessageEmployeeStatus")]
	public partial class InterActionMessageEmployeeStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeID;
		
		private string _UserName;
		
		private int _NewMessageStatus;
		
		private EntityRef<FW_Employee> _FW_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNewMessageStatusChanging(int value);
    partial void OnNewMessageStatusChanged();
    #endregion
		
		public InterActionMessageEmployeeStatus()
		{
			this._FW_Employee = default(EntityRef<FW_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._FW_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMessageStatus", DbType="Int NOT NULL")]
		public int NewMessageStatus
		{
			get
			{
				return this._NewMessageStatus;
			}
			set
			{
				if ((this._NewMessageStatus != value))
				{
					this.OnNewMessageStatusChanging(value);
					this.SendPropertyChanging();
					this._NewMessageStatus = value;
					this.SendPropertyChanged("NewMessageStatus");
					this.OnNewMessageStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FW_Employee_InterActionMessageEmployeeStatus", Storage="_FW_Employee", ThisKey="EmployeeID", OtherKey="EmployeeNumber", IsForeignKey=true)]
		public FW_Employee FW_Employee
		{
			get
			{
				return this._FW_Employee.Entity;
			}
			set
			{
				FW_Employee previousValue = this._FW_Employee.Entity;
				if (((previousValue != value) 
							|| (this._FW_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FW_Employee.Entity = null;
						previousValue.InterActionMessageEmployeeStatus = null;
					}
					this._FW_Employee.Entity = value;
					if ((value != null))
					{
						value.InterActionMessageEmployeeStatus = this;
						this._EmployeeID = value.EmployeeNumber;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("FW_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InterActionMessage")]
	public partial class InterActionMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private int _MessageTypeID;
		
		private int _Receiver;
		
		private int _Sender;
		
		private string _ObjectNumber;
		
		private string _ObjectTitle;
		
		private System.Nullable<System.DateTime> _SentTime;
		
		private System.Nullable<System.DateTime> _ResponseTime;
		
		private int _Priority;
		
		private int _Status;
		
		private int _HandlingItemType;
		
		private int _ProjectID;
		
		private int _CustomerID;
		
		private int _HandlingItemID;
		
		private string _Note;
		
		private EntityRef<InterActionMessageType> _InterActionMessageType;
		
		private EntityRef<FW_Employee> _FW_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnMessageTypeIDChanging(int value);
    partial void OnMessageTypeIDChanged();
    partial void OnReceiverChanging(int value);
    partial void OnReceiverChanged();
    partial void OnSenderChanging(int value);
    partial void OnSenderChanged();
    partial void OnObjectNumberChanging(string value);
    partial void OnObjectNumberChanged();
    partial void OnObjectTitleChanging(string value);
    partial void OnObjectTitleChanged();
    partial void OnSentTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSentTimeChanged();
    partial void OnResponseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResponseTimeChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnHandlingItemTypeChanging(int value);
    partial void OnHandlingItemTypeChanged();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnHandlingItemIDChanging(int value);
    partial void OnHandlingItemIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public InterActionMessage()
		{
			this._InterActionMessageType = default(EntityRef<InterActionMessageType>);
			this._FW_Employee = default(EntityRef<FW_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageTypeID", DbType="Int NOT NULL")]
		public int MessageTypeID
		{
			get
			{
				return this._MessageTypeID;
			}
			set
			{
				if ((this._MessageTypeID != value))
				{
					if (this._InterActionMessageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MessageTypeID = value;
					this.SendPropertyChanged("MessageTypeID");
					this.OnMessageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="Int NOT NULL")]
		public int Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="Int NOT NULL")]
		public int Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					if (this._FW_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectNumber", DbType="NVarChar(50)")]
		public string ObjectNumber
		{
			get
			{
				return this._ObjectNumber;
			}
			set
			{
				if ((this._ObjectNumber != value))
				{
					this.OnObjectNumberChanging(value);
					this.SendPropertyChanging();
					this._ObjectNumber = value;
					this.SendPropertyChanged("ObjectNumber");
					this.OnObjectNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTitle", DbType="NVarChar(500)")]
		public string ObjectTitle
		{
			get
			{
				return this._ObjectTitle;
			}
			set
			{
				if ((this._ObjectTitle != value))
				{
					this.OnObjectTitleChanging(value);
					this.SendPropertyChanging();
					this._ObjectTitle = value;
					this.SendPropertyChanged("ObjectTitle");
					this.OnObjectTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SentTime
		{
			get
			{
				return this._SentTime;
			}
			set
			{
				if ((this._SentTime != value))
				{
					this.OnSentTimeChanging(value);
					this.SendPropertyChanging();
					this._SentTime = value;
					this.SendPropertyChanged("SentTime");
					this.OnSentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ResponseTime
		{
			get
			{
				return this._ResponseTime;
			}
			set
			{
				if ((this._ResponseTime != value))
				{
					this.OnResponseTimeChanging(value);
					this.SendPropertyChanging();
					this._ResponseTime = value;
					this.SendPropertyChanged("ResponseTime");
					this.OnResponseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlingItemType", DbType="Int NOT NULL")]
		public int HandlingItemType
		{
			get
			{
				return this._HandlingItemType;
			}
			set
			{
				if ((this._HandlingItemType != value))
				{
					this.OnHandlingItemTypeChanging(value);
					this.SendPropertyChanging();
					this._HandlingItemType = value;
					this.SendPropertyChanged("HandlingItemType");
					this.OnHandlingItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL")]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlingItemID", DbType="Int NOT NULL")]
		public int HandlingItemID
		{
			get
			{
				return this._HandlingItemID;
			}
			set
			{
				if ((this._HandlingItemID != value))
				{
					this.OnHandlingItemIDChanging(value);
					this.SendPropertyChanging();
					this._HandlingItemID = value;
					this.SendPropertyChanged("HandlingItemID");
					this.OnHandlingItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(1000)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterActionMessageType_InterActionMessage", Storage="_InterActionMessageType", ThisKey="MessageTypeID", OtherKey="MessageTypeID", IsForeignKey=true)]
		public InterActionMessageType InterActionMessageType
		{
			get
			{
				return this._InterActionMessageType.Entity;
			}
			set
			{
				InterActionMessageType previousValue = this._InterActionMessageType.Entity;
				if (((previousValue != value) 
							|| (this._InterActionMessageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InterActionMessageType.Entity = null;
						previousValue.InterActionMessages.Remove(this);
					}
					this._InterActionMessageType.Entity = value;
					if ((value != null))
					{
						value.InterActionMessages.Add(this);
						this._MessageTypeID = value.MessageTypeID;
					}
					else
					{
						this._MessageTypeID = default(int);
					}
					this.SendPropertyChanged("InterActionMessageType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FW_Employee_InterActionMessage", Storage="_FW_Employee", ThisKey="Sender", OtherKey="EmployeeNumber", IsForeignKey=true)]
		public FW_Employee FW_Employee
		{
			get
			{
				return this._FW_Employee.Entity;
			}
			set
			{
				FW_Employee previousValue = this._FW_Employee.Entity;
				if (((previousValue != value) 
							|| (this._FW_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FW_Employee.Entity = null;
						previousValue.InterActionMessages.Remove(this);
					}
					this._FW_Employee.Entity = value;
					if ((value != null))
					{
						value.InterActionMessages.Add(this);
						this._Sender = value.EmployeeNumber;
					}
					else
					{
						this._Sender = default(int);
					}
					this.SendPropertyChanged("FW_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FW_Employees")]
	public partial class FW_Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeNumber;
		
		private string _NickName;
		
		private string _Department;
		
		private bool _Active;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _DisplayName;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _DateofBirth;
		
		private System.Nullable<System.DateTime> _HireDate;
		
		private string _Address;
		
		private string _City;
		
		private string _Province;
		
		private string _PostalCode;
		
		private string _Country;
		
		private string _HomePhone;
		
		private string _CellPhone;
		
		private System.Data.Linq.Binary _Photo;
		
		private System.Nullable<int> _SINCardNumber;
		
		private string _EmailAddress;
		
		private string _EmergencyContactPerson;
		
		private string _EmergencyContactNumber1;
		
		private string _EmergencyContactNumber2;
		
		private string _Position;
		
		private System.Nullable<int> _paytype;
		
		private System.Nullable<int> _payrate;
		
		private string _CompanyEmail;
		
		private string _CompanyCellphone;
		
		private string _Extension;
		
		private string _Performance;
		
		private string _History;
		
		private string _Training;
		
		private string _NumberInfor;
		
		private string _Password;
		
		private string _Roles;
		
		private string _UserName;
		
		private string _Sa1Name;
		
		private string _Sa2Name;
		
		private string _SalesName;
		
		private string _Notes;
		
		private int _PayrollNumber;
		
		private string _DepartmentID;
		
		private bool _ncrEnable;
		
		private System.Data.Linq.Binary _SSMA_TimeStamp;
		
		private System.Nullable<bool> _response;
		
		private System.Data.Linq.Binary _signature;
		
		private int _dID;
		
		private int _Team;
		
		private bool _isLeadHand;
		
		private bool _isAE;
		
		private int _Role;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _StartWorkingDate;
		
		private System.Nullable<System.DateTime> _EndWorkingDate1;
		
		private System.Nullable<System.DateTime> _ReturnToWorkDate;
		
		private System.Nullable<System.DateTime> _EndWorkingDate2;
		
		private short _SelectType;
		
		private string _IsProbation;
		
		private bool _IsInProbation;
		
		private int _ProbationPeriod;
		
		private bool _ShowOnInputHour;
		
		private bool _IsFake;
		
		private bool _IsShowOnPerformanceReport;
		
		private bool _ShowOnCrmPage1;
		
		private bool _ShowOnCommissionPage1;
		
		private bool _ShowOnCommissionPage2;
		
		private bool _CrmLeadOwner;
		
		private bool _CrmLeadAE;
		
		private bool _CrmLeadSelectAeEnable;
		
		private bool _IsAdminTaskSelected;
		
		private EntityRef<InterActionMessageEmployeeStatus> _InterActionMessageEmployeeStatus;
		
		private EntitySet<InterActionMessage> _InterActionMessages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeNumberChanging(int value);
    partial void OnEmployeeNumberChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnDateofBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofBirthChanged();
    partial void OnHireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHireDateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnSINCardNumberChanging(System.Nullable<int> value);
    partial void OnSINCardNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnEmergencyContactPersonChanging(string value);
    partial void OnEmergencyContactPersonChanged();
    partial void OnEmergencyContactNumber1Changing(string value);
    partial void OnEmergencyContactNumber1Changed();
    partial void OnEmergencyContactNumber2Changing(string value);
    partial void OnEmergencyContactNumber2Changed();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnpaytypeChanging(System.Nullable<int> value);
    partial void OnpaytypeChanged();
    partial void OnpayrateChanging(System.Nullable<int> value);
    partial void OnpayrateChanged();
    partial void OnCompanyEmailChanging(string value);
    partial void OnCompanyEmailChanged();
    partial void OnCompanyCellphoneChanging(string value);
    partial void OnCompanyCellphoneChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnPerformanceChanging(string value);
    partial void OnPerformanceChanged();
    partial void OnHistoryChanging(string value);
    partial void OnHistoryChanged();
    partial void OnTrainingChanging(string value);
    partial void OnTrainingChanged();
    partial void OnNumberInforChanging(string value);
    partial void OnNumberInforChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRolesChanging(string value);
    partial void OnRolesChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSa1NameChanging(string value);
    partial void OnSa1NameChanged();
    partial void OnSa2NameChanging(string value);
    partial void OnSa2NameChanged();
    partial void OnSalesNameChanging(string value);
    partial void OnSalesNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPayrollNumberChanging(int value);
    partial void OnPayrollNumberChanged();
    partial void OnDepartmentIDChanging(string value);
    partial void OnDepartmentIDChanged();
    partial void OnncrEnableChanging(bool value);
    partial void OnncrEnableChanged();
    partial void OnSSMA_TimeStampChanging(System.Data.Linq.Binary value);
    partial void OnSSMA_TimeStampChanged();
    partial void OnresponseChanging(System.Nullable<bool> value);
    partial void OnresponseChanged();
    partial void OnsignatureChanging(System.Data.Linq.Binary value);
    partial void OnsignatureChanged();
    partial void OndIDChanging(int value);
    partial void OndIDChanged();
    partial void OnTeamChanging(int value);
    partial void OnTeamChanged();
    partial void OnisLeadHandChanging(bool value);
    partial void OnisLeadHandChanged();
    partial void OnisAEChanging(bool value);
    partial void OnisAEChanged();
    partial void OnRoleChanging(int value);
    partial void OnRoleChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnStartWorkingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartWorkingDateChanged();
    partial void OnEndWorkingDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnEndWorkingDate1Changed();
    partial void OnReturnToWorkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnToWorkDateChanged();
    partial void OnEndWorkingDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnEndWorkingDate2Changed();
    partial void OnSelectTypeChanging(short value);
    partial void OnSelectTypeChanged();
    partial void OnIsProbationChanging(string value);
    partial void OnIsProbationChanged();
    partial void OnIsInProbationChanging(bool value);
    partial void OnIsInProbationChanged();
    partial void OnProbationPeriodChanging(int value);
    partial void OnProbationPeriodChanged();
    partial void OnShowOnInputHourChanging(bool value);
    partial void OnShowOnInputHourChanged();
    partial void OnIsFakeChanging(bool value);
    partial void OnIsFakeChanged();
    partial void OnIsShowOnPerformanceReportChanging(bool value);
    partial void OnIsShowOnPerformanceReportChanged();
    partial void OnShowOnCrmPage1Changing(bool value);
    partial void OnShowOnCrmPage1Changed();
    partial void OnShowOnCommissionPage1Changing(bool value);
    partial void OnShowOnCommissionPage1Changed();
    partial void OnShowOnCommissionPage2Changing(bool value);
    partial void OnShowOnCommissionPage2Changed();
    partial void OnCrmLeadOwnerChanging(bool value);
    partial void OnCrmLeadOwnerChanged();
    partial void OnCrmLeadAEChanging(bool value);
    partial void OnCrmLeadAEChanged();
    partial void OnCrmLeadSelectAeEnableChanging(bool value);
    partial void OnCrmLeadSelectAeEnableChanged();
    partial void OnIsAdminTaskSelectedChanging(bool value);
    partial void OnIsAdminTaskSelectedChanged();
    #endregion
		
		public FW_Employee()
		{
			this._InterActionMessageEmployeeStatus = default(EntityRef<InterActionMessageEmployeeStatus>);
			this._InterActionMessages = new EntitySet<InterActionMessage>(new Action<InterActionMessage>(this.attach_InterActionMessages), new Action<InterActionMessage>(this.detach_InterActionMessages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNumber", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int EmployeeNumber
		{
			get
			{
				return this._EmployeeNumber;
			}
			set
			{
				if ((this._EmployeeNumber != value))
				{
					this.OnEmployeeNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNumber = value;
					this.SendPropertyChanged("EmployeeNumber");
					this.OnEmployeeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofBirth", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateofBirth
		{
			get
			{
				return this._DateofBirth;
			}
			set
			{
				if ((this._DateofBirth != value))
				{
					this.OnDateofBirthChanging(value);
					this.SendPropertyChanging();
					this._DateofBirth = value;
					this.SendPropertyChanged("DateofBirth");
					this.OnDateofBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> HireDate
		{
			get
			{
				return this._HireDate;
			}
			set
			{
				if ((this._HireDate != value))
				{
					this.OnHireDateChanging(value);
					this.SendPropertyChanging();
					this._HireDate = value;
					this.SendPropertyChanged("HireDate");
					this.OnHireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(24)", UpdateCheck=UpdateCheck.Never)]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SINCardNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SINCardNumber
		{
			get
			{
				return this._SINCardNumber;
			}
			set
			{
				if ((this._SINCardNumber != value))
				{
					this.OnSINCardNumberChanging(value);
					this.SendPropertyChanging();
					this._SINCardNumber = value;
					this.SendPropertyChanged("SINCardNumber");
					this.OnSINCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactPerson", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EmergencyContactPerson
		{
			get
			{
				return this._EmergencyContactPerson;
			}
			set
			{
				if ((this._EmergencyContactPerson != value))
				{
					this.OnEmergencyContactPersonChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactPerson = value;
					this.SendPropertyChanged("EmergencyContactPerson");
					this.OnEmergencyContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactNumber1", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EmergencyContactNumber1
		{
			get
			{
				return this._EmergencyContactNumber1;
			}
			set
			{
				if ((this._EmergencyContactNumber1 != value))
				{
					this.OnEmergencyContactNumber1Changing(value);
					this.SendPropertyChanging();
					this._EmergencyContactNumber1 = value;
					this.SendPropertyChanged("EmergencyContactNumber1");
					this.OnEmergencyContactNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactNumber2", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EmergencyContactNumber2
		{
			get
			{
				return this._EmergencyContactNumber2;
			}
			set
			{
				if ((this._EmergencyContactNumber2 != value))
				{
					this.OnEmergencyContactNumber2Changing(value);
					this.SendPropertyChanging();
					this._EmergencyContactNumber2 = value;
					this.SendPropertyChanged("EmergencyContactNumber2");
					this.OnEmergencyContactNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paytype", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> paytype
		{
			get
			{
				return this._paytype;
			}
			set
			{
				if ((this._paytype != value))
				{
					this.OnpaytypeChanging(value);
					this.SendPropertyChanging();
					this._paytype = value;
					this.SendPropertyChanged("paytype");
					this.OnpaytypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payrate", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> payrate
		{
			get
			{
				return this._payrate;
			}
			set
			{
				if ((this._payrate != value))
				{
					this.OnpayrateChanging(value);
					this.SendPropertyChanging();
					this._payrate = value;
					this.SendPropertyChanged("payrate");
					this.OnpayrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyEmail", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CompanyEmail
		{
			get
			{
				return this._CompanyEmail;
			}
			set
			{
				if ((this._CompanyEmail != value))
				{
					this.OnCompanyEmailChanging(value);
					this.SendPropertyChanging();
					this._CompanyEmail = value;
					this.SendPropertyChanged("CompanyEmail");
					this.OnCompanyEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCellphone", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CompanyCellphone
		{
			get
			{
				return this._CompanyCellphone;
			}
			set
			{
				if ((this._CompanyCellphone != value))
				{
					this.OnCompanyCellphoneChanging(value);
					this.SendPropertyChanging();
					this._CompanyCellphone = value;
					this.SendPropertyChanged("CompanyCellphone");
					this.OnCompanyCellphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(4)", UpdateCheck=UpdateCheck.Never)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Performance", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Performance
		{
			get
			{
				return this._Performance;
			}
			set
			{
				if ((this._Performance != value))
				{
					this.OnPerformanceChanging(value);
					this.SendPropertyChanging();
					this._Performance = value;
					this.SendPropertyChanged("Performance");
					this.OnPerformanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_History", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string History
		{
			get
			{
				return this._History;
			}
			set
			{
				if ((this._History != value))
				{
					this.OnHistoryChanging(value);
					this.SendPropertyChanging();
					this._History = value;
					this.SendPropertyChanged("History");
					this.OnHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Training", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Training
		{
			get
			{
				return this._Training;
			}
			set
			{
				if ((this._Training != value))
				{
					this.OnTrainingChanging(value);
					this.SendPropertyChanging();
					this._Training = value;
					this.SendPropertyChanged("Training");
					this.OnTrainingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberInfor", DbType="NChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string NumberInfor
		{
			get
			{
				return this._NumberInfor;
			}
			set
			{
				if ((this._NumberInfor != value))
				{
					this.OnNumberInforChanging(value);
					this.SendPropertyChanging();
					this._NumberInfor = value;
					this.SendPropertyChanged("NumberInfor");
					this.OnNumberInforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles", DbType="NChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				if ((this._Roles != value))
				{
					this.OnRolesChanging(value);
					this.SendPropertyChanging();
					this._Roles = value;
					this.SendPropertyChanged("Roles");
					this.OnRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sa1Name", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string Sa1Name
		{
			get
			{
				return this._Sa1Name;
			}
			set
			{
				if ((this._Sa1Name != value))
				{
					this.OnSa1NameChanging(value);
					this.SendPropertyChanging();
					this._Sa1Name = value;
					this.SendPropertyChanged("Sa1Name");
					this.OnSa1NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sa2Name", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string Sa2Name
		{
			get
			{
				return this._Sa2Name;
			}
			set
			{
				if ((this._Sa2Name != value))
				{
					this.OnSa2NameChanging(value);
					this.SendPropertyChanging();
					this._Sa2Name = value;
					this.SendPropertyChanged("Sa2Name");
					this.OnSa2NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesName", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string SalesName
		{
			get
			{
				return this._SalesName;
			}
			set
			{
				if ((this._SalesName != value))
				{
					this.OnSalesNameChanging(value);
					this.SendPropertyChanging();
					this._SalesName = value;
					this.SendPropertyChanged("SalesName");
					this.OnSalesNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollNumber", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PayrollNumber
		{
			get
			{
				return this._PayrollNumber;
			}
			set
			{
				if ((this._PayrollNumber != value))
				{
					this.OnPayrollNumberChanging(value);
					this.SendPropertyChanging();
					this._PayrollNumber = value;
					this.SendPropertyChanged("PayrollNumber");
					this.OnPayrollNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="NChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ncrEnable", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ncrEnable
		{
			get
			{
				return this._ncrEnable;
			}
			set
			{
				if ((this._ncrEnable != value))
				{
					this.OnncrEnableChanging(value);
					this.SendPropertyChanging();
					this._ncrEnable = value;
					this.SendPropertyChanged("ncrEnable");
					this.OnncrEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSMA_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SSMA_TimeStamp
		{
			get
			{
				return this._SSMA_TimeStamp;
			}
			set
			{
				if ((this._SSMA_TimeStamp != value))
				{
					this.OnSSMA_TimeStampChanging(value);
					this.SendPropertyChanging();
					this._SSMA_TimeStamp = value;
					this.SendPropertyChanged("SSMA_TimeStamp");
					this.OnSSMA_TimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_response", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> response
		{
			get
			{
				return this._response;
			}
			set
			{
				if ((this._response != value))
				{
					this.OnresponseChanging(value);
					this.SendPropertyChanging();
					this._response = value;
					this.SendPropertyChanged("response");
					this.OnresponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signature", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary signature
		{
			get
			{
				return this._signature;
			}
			set
			{
				if ((this._signature != value))
				{
					this.OnsignatureChanging(value);
					this.SendPropertyChanging();
					this._signature = value;
					this.SendPropertyChanged("signature");
					this.OnsignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int dID
		{
			get
			{
				return this._dID;
			}
			set
			{
				if ((this._dID != value))
				{
					this.OndIDChanging(value);
					this.SendPropertyChanging();
					this._dID = value;
					this.SendPropertyChanged("dID");
					this.OndIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this.OnTeamChanging(value);
					this.SendPropertyChanging();
					this._Team = value;
					this.SendPropertyChanged("Team");
					this.OnTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLeadHand", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool isLeadHand
		{
			get
			{
				return this._isLeadHand;
			}
			set
			{
				if ((this._isLeadHand != value))
				{
					this.OnisLeadHandChanging(value);
					this.SendPropertyChanging();
					this._isLeadHand = value;
					this.SendPropertyChanged("isLeadHand");
					this.OnisLeadHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAE", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool isAE
		{
			get
			{
				return this._isAE;
			}
			set
			{
				if ((this._isAE != value))
				{
					this.OnisAEChanging(value);
					this.SendPropertyChanging();
					this._isAE = value;
					this.SendPropertyChanged("isAE");
					this.OnisAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartWorkingDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StartWorkingDate
		{
			get
			{
				return this._StartWorkingDate;
			}
			set
			{
				if ((this._StartWorkingDate != value))
				{
					this.OnStartWorkingDateChanging(value);
					this.SendPropertyChanging();
					this._StartWorkingDate = value;
					this.SendPropertyChanged("StartWorkingDate");
					this.OnStartWorkingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndWorkingDate1", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndWorkingDate1
		{
			get
			{
				return this._EndWorkingDate1;
			}
			set
			{
				if ((this._EndWorkingDate1 != value))
				{
					this.OnEndWorkingDate1Changing(value);
					this.SendPropertyChanging();
					this._EndWorkingDate1 = value;
					this.SendPropertyChanged("EndWorkingDate1");
					this.OnEndWorkingDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnToWorkDate", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReturnToWorkDate
		{
			get
			{
				return this._ReturnToWorkDate;
			}
			set
			{
				if ((this._ReturnToWorkDate != value))
				{
					this.OnReturnToWorkDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnToWorkDate = value;
					this.SendPropertyChanged("ReturnToWorkDate");
					this.OnReturnToWorkDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndWorkingDate2", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndWorkingDate2
		{
			get
			{
				return this._EndWorkingDate2;
			}
			set
			{
				if ((this._EndWorkingDate2 != value))
				{
					this.OnEndWorkingDate2Changing(value);
					this.SendPropertyChanging();
					this._EndWorkingDate2 = value;
					this.SendPropertyChanged("EndWorkingDate2");
					this.OnEndWorkingDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectType", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short SelectType
		{
			get
			{
				return this._SelectType;
			}
			set
			{
				if ((this._SelectType != value))
				{
					this.OnSelectTypeChanging(value);
					this.SendPropertyChanging();
					this._SelectType = value;
					this.SendPropertyChanged("SelectType");
					this.OnSelectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProbation", DbType="NChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string IsProbation
		{
			get
			{
				return this._IsProbation;
			}
			set
			{
				if ((this._IsProbation != value))
				{
					this.OnIsProbationChanging(value);
					this.SendPropertyChanging();
					this._IsProbation = value;
					this.SendPropertyChanged("IsProbation");
					this.OnIsProbationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInProbation", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsInProbation
		{
			get
			{
				return this._IsInProbation;
			}
			set
			{
				if ((this._IsInProbation != value))
				{
					this.OnIsInProbationChanging(value);
					this.SendPropertyChanging();
					this._IsInProbation = value;
					this.SendPropertyChanged("IsInProbation");
					this.OnIsInProbationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbationPeriod", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ProbationPeriod
		{
			get
			{
				return this._ProbationPeriod;
			}
			set
			{
				if ((this._ProbationPeriod != value))
				{
					this.OnProbationPeriodChanging(value);
					this.SendPropertyChanging();
					this._ProbationPeriod = value;
					this.SendPropertyChanged("ProbationPeriod");
					this.OnProbationPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnInputHour", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ShowOnInputHour
		{
			get
			{
				return this._ShowOnInputHour;
			}
			set
			{
				if ((this._ShowOnInputHour != value))
				{
					this.OnShowOnInputHourChanging(value);
					this.SendPropertyChanging();
					this._ShowOnInputHour = value;
					this.SendPropertyChanged("ShowOnInputHour");
					this.OnShowOnInputHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFake", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsFake
		{
			get
			{
				return this._IsFake;
			}
			set
			{
				if ((this._IsFake != value))
				{
					this.OnIsFakeChanging(value);
					this.SendPropertyChanging();
					this._IsFake = value;
					this.SendPropertyChanged("IsFake");
					this.OnIsFakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShowOnPerformanceReport", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsShowOnPerformanceReport
		{
			get
			{
				return this._IsShowOnPerformanceReport;
			}
			set
			{
				if ((this._IsShowOnPerformanceReport != value))
				{
					this.OnIsShowOnPerformanceReportChanging(value);
					this.SendPropertyChanging();
					this._IsShowOnPerformanceReport = value;
					this.SendPropertyChanged("IsShowOnPerformanceReport");
					this.OnIsShowOnPerformanceReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnCrmPage1", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ShowOnCrmPage1
		{
			get
			{
				return this._ShowOnCrmPage1;
			}
			set
			{
				if ((this._ShowOnCrmPage1 != value))
				{
					this.OnShowOnCrmPage1Changing(value);
					this.SendPropertyChanging();
					this._ShowOnCrmPage1 = value;
					this.SendPropertyChanged("ShowOnCrmPage1");
					this.OnShowOnCrmPage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnCommissionPage1", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ShowOnCommissionPage1
		{
			get
			{
				return this._ShowOnCommissionPage1;
			}
			set
			{
				if ((this._ShowOnCommissionPage1 != value))
				{
					this.OnShowOnCommissionPage1Changing(value);
					this.SendPropertyChanging();
					this._ShowOnCommissionPage1 = value;
					this.SendPropertyChanged("ShowOnCommissionPage1");
					this.OnShowOnCommissionPage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnCommissionPage2", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ShowOnCommissionPage2
		{
			get
			{
				return this._ShowOnCommissionPage2;
			}
			set
			{
				if ((this._ShowOnCommissionPage2 != value))
				{
					this.OnShowOnCommissionPage2Changing(value);
					this.SendPropertyChanging();
					this._ShowOnCommissionPage2 = value;
					this.SendPropertyChanged("ShowOnCommissionPage2");
					this.OnShowOnCommissionPage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmLeadOwner", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CrmLeadOwner
		{
			get
			{
				return this._CrmLeadOwner;
			}
			set
			{
				if ((this._CrmLeadOwner != value))
				{
					this.OnCrmLeadOwnerChanging(value);
					this.SendPropertyChanging();
					this._CrmLeadOwner = value;
					this.SendPropertyChanged("CrmLeadOwner");
					this.OnCrmLeadOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmLeadAE", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CrmLeadAE
		{
			get
			{
				return this._CrmLeadAE;
			}
			set
			{
				if ((this._CrmLeadAE != value))
				{
					this.OnCrmLeadAEChanging(value);
					this.SendPropertyChanging();
					this._CrmLeadAE = value;
					this.SendPropertyChanged("CrmLeadAE");
					this.OnCrmLeadAEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmLeadSelectAeEnable", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CrmLeadSelectAeEnable
		{
			get
			{
				return this._CrmLeadSelectAeEnable;
			}
			set
			{
				if ((this._CrmLeadSelectAeEnable != value))
				{
					this.OnCrmLeadSelectAeEnableChanging(value);
					this.SendPropertyChanging();
					this._CrmLeadSelectAeEnable = value;
					this.SendPropertyChanged("CrmLeadSelectAeEnable");
					this.OnCrmLeadSelectAeEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdminTaskSelected", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsAdminTaskSelected
		{
			get
			{
				return this._IsAdminTaskSelected;
			}
			set
			{
				if ((this._IsAdminTaskSelected != value))
				{
					this.OnIsAdminTaskSelectedChanging(value);
					this.SendPropertyChanging();
					this._IsAdminTaskSelected = value;
					this.SendPropertyChanged("IsAdminTaskSelected");
					this.OnIsAdminTaskSelectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FW_Employee_InterActionMessageEmployeeStatus", Storage="_InterActionMessageEmployeeStatus", ThisKey="EmployeeNumber", OtherKey="EmployeeID", IsUnique=true, IsForeignKey=false)]
		public InterActionMessageEmployeeStatus InterActionMessageEmployeeStatus
		{
			get
			{
				return this._InterActionMessageEmployeeStatus.Entity;
			}
			set
			{
				InterActionMessageEmployeeStatus previousValue = this._InterActionMessageEmployeeStatus.Entity;
				if (((previousValue != value) 
							|| (this._InterActionMessageEmployeeStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InterActionMessageEmployeeStatus.Entity = null;
						previousValue.FW_Employee = null;
					}
					this._InterActionMessageEmployeeStatus.Entity = value;
					if ((value != null))
					{
						value.FW_Employee = this;
					}
					this.SendPropertyChanged("InterActionMessageEmployeeStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FW_Employee_InterActionMessage", Storage="_InterActionMessages", ThisKey="EmployeeNumber", OtherKey="Sender")]
		public EntitySet<InterActionMessage> InterActionMessages
		{
			get
			{
				return this._InterActionMessages;
			}
			set
			{
				this._InterActionMessages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InterActionMessages(InterActionMessage entity)
		{
			this.SendPropertyChanging();
			entity.FW_Employee = this;
		}
		
		private void detach_InterActionMessages(InterActionMessage entity)
		{
			this.SendPropertyChanging();
			entity.FW_Employee = null;
		}
	}
}
#pragma warning restore 1591
